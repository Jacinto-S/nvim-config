vim.keymap.set('n', '<leader>gs', vim.cmd.Git, { noremap = true, desc = "Git status" })
vim.keymap.set('n', '<leader>ga', '_wy$:Git add <C-r>0<Enter>', { noremap = true, desc = "Git add file" })
vim.keymap.set('n', '<leader>gd', '_wy$:e <C-r>0<Enter>:Gdiff :0<Enter>', { noremap = true, desc = "Git diff for file" })
vim.keymap.set('n', '<leader>gr', '_wy$:Git restore --staged <C-r>0<Enter>', { noremap = true, desc = "Git restore file" })
vim.keymap.set('n', '<leader>gb', '_wy$:Git checkout HEAD -- <C-r>0<Enter>', { noremap = true, desc = "Git rollback file" })
vim.keymap.set('n', '<leader>gx', '_wy$:Git rm --cached <C-r>0<Enter>', { noremap = true, desc = "Git remove file" })
vim.keymap.set('n', '<leader>gc', ':Git commit -m ""<Left>', { noremap = true, desc = "Git commit" })
vim.keymap.set('n', '<leader>gp', ':Git push<Enter>', { noremap = true, desc = "Git push" })
vim.keymap.set('n', '<leader>gg', ':Git pull<Enter>', { noremap = true, desc = "Git pull (get)" })
vim.keymap.set('n', '<leader>gf', ':Git fetch<Enter>', { noremap = true, desc = "Git fetch" })
vim.keymap.set('n', '<leader>gi', '_wy$:aboveleft split <C-r>0<Enter>', { noremap = true, desc = "Inspect file" })
vim.keymap.set('n', '<leader>gwa', ':Git commit -a -m ""<Left>', {noremap = true, desc = "Git commit all tracked"})
vim.keymap.set('n', '<leader>gwp', function()
    vim.ui.input({ prompt = "Commit message: " }, function(input)
        if input and input ~= "" then
            vim.cmd("Git commit -a -m '" .. input .. "'")
            vim.cmd("Git push")
        else
            print("Aborted: No valid commit message provided.")
        end
    end)
end, { noremap = true, desc = "Git commit all tracked and push" })
